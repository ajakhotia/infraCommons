name: docker-typical-build-push
description: Builds a stage out of a dockerfile while caching the staged chain

inputs:
  dockerfile:
    required: true
    description: "Dockerfile to build."

  target-stage:
    required: true
    description: "Stage to build."

  target-stage-id:
    required: true
    description: "Identity of the stage in caches / published docker image. These ids should be 
                  consistent across workflows for effective caching."

  upstream-stage-id:
    required: false
    description: "Identity upstream stage that the target-stage depends on. These ids should be 
                  consistent across workflows for effective caching."

  build-name:
    required: true
    description: "Name of the build."

  build-args:
    required: false
    description: "Build arguments to pass to docker."

  username:
    required: false
    description: "Name of the user (defaults to github.actor)"
    default: ""

  password:
    required: true
    description: "Token to use to authenticate with the registry"

  registry:
    required: true
    description: "Registry to use"
    default: ghcr.io

runs:
  using: "composite"
  steps:
    - name: checkout-self
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: setup-buildx
      uses: docker/setup-buildx-action@v3

    - name: setup-login
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username != '' && inputs.username || github.actor }}
        password: ${{ inputs.password }}

    - name: normalized-repository-name
      id: normalized-repository-name
      uses: ajakhotia/infraCommons/.github/actions/normalize@main
      with:
        string: ${{ github.repository }}

    - name: normalized-target-stage-id
      id: normalized-target-stage-id
      uses: ajakhotia/infraCommons/.github/actions/normalize@main
      with:
        string: ${{ inputs.target-stage-id }}

    - name: normalized-upstream-stage-id
      id: normalized-upstream-stage-id
      uses: ajakhotia/infraCommons/.github/actions/normalize@main
      with:
        string: ${{ inputs.upstream-stage-id }}

    - name: normalized-build-name
      id: normalized-build-name
      uses: ajakhotia/infraCommons/.github/actions/normalize@main
      with:
        string: ${{ inputs.build-name }}

    - name: git-tags
      id: git-tags
      uses: digital-ai/query-tag-action@v2
      with:
        commit-ish: HEAD
        exact-match: 'true'
        include: 'v*'
        skip-unshallow: 'true'

    - name: docker-metadata
      id: docker-metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ steps.normalized-repository-name.outputs.string }}-${{ steps.normalized-target-stage-id.outputs.string }}-${{ steps.normalized-build-name.outputs.string }}
        tags: |
          type=raw,value=${{ github.sha }}
          type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
          type=raw,value=${{ steps.git-tags.outputs.tag }},enable=${{ contains(steps.git-tags.outputs.tag, 'NO_TAGS') == false }}

    - name: docker-stage-build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.target-stage }}
        push: true
        tags: ${{ steps.docker-metadata.outputs.tags }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        cache-from: |
          ${{ inputs.upstream-stage-id != '' && format('type=registry,mode=max,ref={0}/{1}-{2}-{3}:buildcache', inputs.registry, steps.normalized-repository-name.outputs.string, steps.normalized-upstream-stage-id.outputs.string, steps.normalized-build-name.outputs.string) || '' }}
          type=registry,mode=max,ref=${{ inputs.registry }}/${{ steps.normalized-repository-name.outputs.string }}-${{ steps.normalized-target-stage-id.outputs.string }}-${{ steps.normalized-build-name.outputs.string }}:buildcache
        cache-to: |
          type=registry,mode=max,ref=${{ inputs.registry }}/${{ steps.normalized-repository-name.outputs.string }}-${{ steps.normalized-target-stage-id.outputs.string }}-${{ steps.normalized-build-name.outputs.string }}:buildcache
        build-args: |
          ${{ inputs.build-args }}
